
- name: Include Variables
  include_vars: "{{ item }}"
  with_items:
    - vault/cyphers
    - group_vars/aws
  tags:
    - aws
    - info
    - aws_key
    - aws_vpc
    - aws_rds

# - name: Get VPC Info
#   shell: "aws ec2 describe-vpcs --region {{ aws.env.EC2_REGION }}"
#   register: vpc_info
#   tags:
#     - info
#
# - name: debug vpc_info
#   debug: msg="{{ (vpc_info.stdout|from_json).Vpcs[0].VpcId }}"
#   tags:
#     - info

- name: Create AWS VPC
  ec2_vpc:
    state: present
    cidr_block: "{{ item.value.cidr_block }}"
    resource_tags: "{{ item.value.resource_tags }}"
    subnets: "{{ item.value.subnets }}"
    route_tables: "{{ item.value.route_tables }}"
    internet_gateway: True
  register: vpc
  with_dict: "{{ aws.vpc }}"
  tags:
    - aws_vpc
    - aws_rds

- name: Create an AWS key pair
  ec2_key:
    name: "{{ aws.key }}"
  register: ec2_key
  tags:
    - aws_key

- name: save AWS private key
  copy: 
    content="{{ ec2_key.key.private_key }}" 
    dest="keys/{{ aws.key }}.pem" 
    mode=0600
  when: ec2_key.changed
  tags:
    - aws_key

- name: Create EC2 Security Groups
  ec2_group:
    name: "{{ item.key }}"
    description: "{{ item.value.description }}"
    rules: "{{ item.value.rules }}"
    rules_egress: "{{ item.value.rules_egress }}"
    vpc_id: "{{ vpc.results[0].vpc.id }}"
  register: sg
  with_dict: "{{ aws.security_groups }}"
  tags:
    - aws_vpc
    - aws_rds

# - name: debug sg
#   debug: msg="{{ sg.results[0].group_id }}"
#   tags:
#     - aws_vpc
#     - aws_rds

- name: Create EC2 Instances
  ec2:
    key_name: "{{ item.value.key }}"
    instance_type: "{{ item.value.type }}"
    image: "{{ item.value.image }}"
    group: "{{ item.value.group }}"
    vpc_subnet_id: "{{ item.value.vpc_subnet_id }}"
    assign_public_ip: "{{ item.value.assign_publick_ip }}"
    instance_tags: "{{ item.value.tags }}"
    count_tag: "{{ item.value.tags }}"
    exact_count: 1
  register: ec2_results
  with_dict: "{{ ec2_instances }}"

#- name: Create RDS Subnet Group
#  rds_subnet_group:
#    state: present
#    name: "{{ item.key }}"
#    description: "{{ item.value.description }}"
#    subnets: "{{ item.value.subnets }}"
#  with_dict: "{{ rds.subnet_groups }}"
#  tags:
#    - aws_rds

#- name: Create RDS Instance
#  rds:
#    command: create
#    instance_name: "{{ item.key }}"
#    db_name: "{{ item.value.db_name }}"
#    db_engine: "{{ item.value.db_engine }}"
#    size: "{{ item.value.size }}"
#    instance_type: "{{ item.value.instance_type }}"
#    username: "{{ item.value.username }}"
#    password: "{{ item.value.password }}"
#    subnet: "{{ item.value.subnet }}"
#    vpc_security_groups: "{{ item.value.vpc_security_groups }}"
#    tags: "{{ item.value.tags }}"
#    #publicly_accessible: yes
#  with_dict: "{{rds.instances}}"
#  tags:
#    - aws_rds
  
